; Removes the entry (file or directory) given in SI (relative and absolute paths are accepted).
; AH = 0x13
; SI = Path string.
REMOVE_ENTRY_INT:
	MOV CX, DOS_SEGMENT
	MOV ES, CX
	MOV BX, DATA_BUFFER

	MOV DI, .FILENAME
	CALL CONVERT_LE_AND_TRAVERSE
	MOV DS, CX
	JC .ERROR

	MOV WORD[.FIRST_CLUSTER], AX

	CMP AX, WORD[WORKING_DIRECTORY_FIRST_SECTOR]
	JNE .KERNEL_BUFFER

	XOR BX, BX
	MOV ES, BX
	MOV BX, WORD[WORKING_DIRECTORY]

.KERNEL_BUFFER:
	MOV WORD[.DIRECTORY_OFFSET], BX

	MOV SI, DI
	CALL FIND_ENTRY
	JC .NOT_FOUND

	MOV WORD[.ENTRY_OFFSET], BX

	MOV CX, WORD[ES:BX + 26]

	TEST BYTE[ES:BX + 11], 0x10
	JZ .FILE

	MOV AX, CX
	MOV SI, FIRST_CLUSTERS
	CALL IS_FIRST_CLUSTER_IN_PATH
	JZ .DIRECTORY_IN_USE

	MOV DI, ES
	MOV SI, BX

	MOV BX, DOS_SEGMENT
	MOV ES, BX
	MOV BX, DATA_BUFFER + 32 * 113
	CALL LOAD_DIRECTORY
	JC .ERROR

	CALL IS_DIRECTORY_EMPTY
	JNZ .NOT_EMPTY

	MOV BX, SI
	MOV ES, DI

.FILE:
	MOV AL, BYTE[ES:BX]
	MOV BYTE[.ENTRY_CHAR], AL
	MOV BYTE[ES:BX], 0xE5

	MOV BX, WORD[.DIRECTORY_OFFSET]

.FREE_LOOP:
	MOV AX, CX
	CALL GET_NEXT_CLUSTER

	MOV SI, AX

	MOV AX, CX
	XOR DX, DX
	CALL WRITE_CLUSTER

	MOV CX, SI

	CMP CX, 0xFF0
	JB .FREE_LOOP

	MOV AX, WORD[.FIRST_CLUSTER]
	CALL GET_DIRECTORY_SIZE
	CALL STORE_DIRECTORY
	JC .FAILED_WRITE

	XOR BX, BX
	MOV ES, BX
	MOV BX, FILESYSTEM
	MOV DL, BYTE[DRIVE_NUMBER]
	CALL STORE_FAT
	JC .FAILED_WRITE

	XOR AH, AH
	INT 0x13

	JMP RET_CODE_INT

.FAILED_WRITE: ; Nared pravilno. ko bo funkcija na voljo...
	XOR AH, AH
	MOV DL, BYTE[DRIVE_NUMBER]
	INT 0x13

	MOV BX, WORD[.ENTRY_OFFSET]
	MOV AL, BYTE[.ENTRY_CHAR]
	MOV BYTE[ES:BX], AL

	MOV BX, WORD[.DIRECTORY_OFFSET]
	CALL GET_DIRECTORY_SIZE
	PUSH DX
	CALL STORE_DIRECTORY
	POP DX

	XOR BX, BX
	MOV ES, BX
	MOV BX, FILESYSTEM
	PUSH DX
	MOV DL, BYTE[DRIVE_NUMBER]
	CALL LOAD_FAT
	POP DX

	JMP .ERROR

.NOT_EMPTY:
	MOV DH, 0x47
	JMP .ERROR

.DIRECTORY_IN_USE:
	MOV DH, 0x4B
	JMP .ERROR

.NOT_FOUND:
	MOV DH, 0x43

.ERROR:
	MOV BYTE[INT_RET_CODE], DH
	JMP RET_CODE_INT

.FILENAME: TIMES 11 DB 0
.FIRST_CLUSTER: DW 0
.DIRECTORY_OFFSET: DW 0
.ENTRY_OFFSET: DW 0
.ENTRY_CHAR: DB 0
