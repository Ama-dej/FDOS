[BITS 16]
[ORG 0x0000]

	MOV AH, 0x30
	INT 0x80

	XOR SI, SI
	XOR DI, DI

	; MOV CX, 256 * 128
	MOV CX, 320 * 200

	; Center = (128, 64)

MANDELBROT_LOOP:
	; Fixed point number where the lowest 11 bits represent fractions.

	MOV AX, SI
	SHR AX, 1
	SUB AX, 64 + 32
	MOV WORD[X_SCALED], AX

	; Same here.
	MOV AX, DI
	SHR AX, 1
	SUB AX, 32 + 16
	MOV WORD[Y_SCALED], AX

	XOR AX, AX
	XOR BX, BX

	PUSH CX
	PUSH SI
	PUSH DI
	MOV CX, 100

SEQUENCE:
	MOV DL, AL
	MOV DH, BL

	SUB AL, BL
	ADD BL, DL
	IMUL BL
	SHR AX, 5
	ADD AX, WORD[X_SCALED]

	PUSH AX

	MOV AL, DL
	MOV BL, DH
	IMUL BL
	SHR AX, 5 - 1
	ADD AX, WORD[Y_SCALED]
	MOV BX, AX
	
	POP AX
	PUSH AX
	PUSH BX

	IMUL AL
	SHR AX, 5
	MOV DX, AX
	MOV AX, BX
	IMUL AL
	SHR AX, 5
	ADD AX, DX

	CMP AX, 4 << 5
	POP BX
	POP AX
	JA UNSTABLE

	LOOP SEQUENCE	

	MOV AH, 0x31
	MOV DL, 1
	POP CX
	POP BX
	PUSH BX
	PUSH CX
	INT 0x80

UNSTABLE:
	POP DI
	POP SI
	POP CX

	INC SI
	CMP SI, 320
	JB CONTINUE

	XOR SI, SI
	INC DI

CONTINUE:
	DEC CX
	JNZ MANDELBROT_LOOP

	XOR AH, AH
	INT 0x16

	MOV AH, 0x00
	MOV AL, 0x03
	INT 0x10

	XOR AH, AH
	INT 0x80

X_SCALED: DW 0
Y_SCALED: DW 0
